// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Zhaso.Data;
using Zhaso.Entities;

namespace Zhaso.Data.Migrations
{
    [DbContext(typeof(ZhasoContext))]
    [Migration("20180321074146_Migration032102")]
    partial class Migration032102
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Zhaso.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("Order");

                    b.Property<int?>("ParentId");

                    b.Property<string>("Path");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Zhaso.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(500);

                    b.Property<string>("Category")
                        .HasMaxLength(500);

                    b.Property<string>("City")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("EnglishName")
                        .HasMaxLength(150);

                    b.Property<string>("LegalPerson")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(150);

                    b.Property<decimal>("Order");

                    b.Property<string>("Prince")
                        .HasMaxLength(50);

                    b.Property<string>("ShortName")
                        .HasMaxLength(50);

                    b.Property<string>("Telphone")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Zhaso.Entities.CustomerCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("CustomerId");

                    b.Property<bool>("Deleted");

                    b.Property<decimal>("Order");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerCategories");
                });

            modelBuilder.Entity("Zhaso.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActionName")
                        .HasMaxLength(50);

                    b.Property<string>("ControllerName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Icon")
                        .HasMaxLength(50);

                    b.Property<int>("Mode");

                    b.Property<string>("ModelName")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Optional")
                        .HasMaxLength(50);

                    b.Property<decimal>("Order");

                    b.Property<int?>("ParentId");

                    b.Property<string>("Path");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Zhaso.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<decimal>("Order");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("SimpleName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Zhaso.Entities.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<bool>("Deleted");

                    b.Property<decimal>("Order");

                    b.Property<int>("PermissionId");

                    b.Property<int>("RoleId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermission");
                });

            modelBuilder.Entity("Zhaso.Entities.RoleUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<bool>("Deleted");

                    b.Property<decimal>("Order");

                    b.Property<int>("RoleId");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("Zhaso.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("Birthday");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("EntryDate");

                    b.Property<int>("Gender");

                    b.Property<DateTime?>("LeaveDate");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("Order");

                    b.Property<string>("Password")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .HasMaxLength(50);

                    b.Property<string>("Photo")
                        .HasMaxLength(250);

                    b.Property<int>("Status");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Zhaso.Entities.Category", b =>
                {
                    b.HasOne("Zhaso.Entities.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Zhaso.Entities.CustomerCategory", b =>
                {
                    b.HasOne("Zhaso.Entities.Customer", "Customer")
                        .WithMany("CustomerCategories")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Zhaso.Entities.Permission", b =>
                {
                    b.HasOne("Zhaso.Entities.Permission", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Zhaso.Entities.RolePermission", b =>
                {
                    b.HasOne("Zhaso.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Zhaso.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Zhaso.Entities.RoleUser", b =>
                {
                    b.HasOne("Zhaso.Entities.Role", "Role")
                        .WithMany("RoleUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Zhaso.Entities.User", "User")
                        .WithMany("RoleUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
